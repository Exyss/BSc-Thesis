@INPROCEEDINGS{1-3_2-3,
  author={Lewis, P. M. and Stearns, R. E. and Hartmanis, J.},
  booktitle={6th Annual Symposium on Switching Circuit Theory and Logical Design (SWCT 1965)}, 
  title={Memory bounds for recognition of context-free and context-sensitive languages}, 
  year={1965},
  volume={},
  number={},
  pages={191-202},
  keywords={Computational complexity;Binary sequences;Turing machines},
  doi={10.1109/FOCS.1965.14}
}

@article{res_parity,
  title = {Resolution over linear equations modulo two},
  journal = {Annals of Pure and Applied Logic},
  volume = {171},
  number = {1},
  pages = {102722},
  year = {2020},
  issn = {0168-0072},
  doi = {https://doi.org/10.1016/j.apal.2019.102722},
  url = {https://www.sciencedirect.com/science/article/pii/S0168007219300855},
  author = {Dmitry Itsykson and Dmitry Sokolov},
  keywords = {Resolution, Proof system, Lower bound, Parity, Pigeonhole principle},
  abstract = {We consider an extension of the resolution proof system that operates with disjunctions of linear equalities over F2; we denote this system by Res(⊕). It is well known that tree-like resolution is equivalent in behavior to DPLL algorithms for the Boolean satisfiability problem. Every DPLL algorithm splits the input problem into two by assigning two possible values to a variable; then it simplifies the two resulting formulas and makes two recursive calls. Tree-like Res(⊕)-proofs correspond to an extension of the DPLL paradigm, in which we can split by an arbitrary linear combination of variables modulo two. These algorithms quickly solve formulas that explicitly encode linear systems modulo two which were used for proving exponential lower bounds for conventional DPLL algorithms. We prove exponential lower bounds on the size of tree-like Res(⊕)-proofs. We also show that resolution and tree-like Res(⊕) do not simulate each other. We prove a space vs size tradeoff for Res(⊕)-proofs. We prove that Res(⊕) is implicationally complete and also that Res(⊕) is polynomially equivalent to its semantic version. We consider the proof system Res(⊕;⩽k) that is a restricted version of Res(⊕) operating with disjunctions of linear equalities such that at most k equalities depend on more than one variable. We simulate Res(⊕;⩽k) in the OBDD-based proof system with blowup 2k and in Polynomial Calculus Resolution with blowup 2nH(2k/n)poly(n), where n is the number of variables and H(p) is the binary entropy; the latter result implies exponential lower bounds on the size of Res(⊕;⩽δn)-proofs for some constant δ>0. Raz and Tzameret introduced the system R(lin) which operates with disjunctions of linear equalities with integer coefficients. We show that Res(⊕) can be p-simulated in R(lin).}
}

@article{Nullstellensatz,
    author = {De Rezende, Susanna F. and Meir, Or and Nordstr\"{o}m, Jakob and Robere, Robert},
    title = {Nullstellensatz Size-Degree Trade-offs from Reversible Pebbling},
    year = {2021},
    issue_date = {Jun 2021},
    publisher = {Birkhauser Verlag},
    address = {CHE},
    volume = {30},
    number = {1},
    issn = {1016-3328},
    url = {https://doi.org/10.1007/s00037-020-00201-y},
    doi = {10.1007/s00037-020-00201-y},
    abstract = {We establish an exactly tight relation between reversible
    pebblings of graphs and Nullstellensatz refutations of pebbling formulas,
    showing that a graph G can be reversibly pebbled in time t and space s if and only if there is a Nullstellensatz refutation of the pebbling formula
    over G in size t + 1 and degree s (independently of the field in which
    the Nullstellensatz refutation is made). We use this correspondence
    to prove a number of strong size-degree trade-offs for Nullstellensatz,
    which to the best of our knowledge are the first such results for this
    proof system.},
    journal = {Comput. Complex.},
    month = {jun},
    numpages = {45},
    keywords = {68Q17, Proof complexity, Nullstellensatz, Trade-offs, Pebbling}
}
