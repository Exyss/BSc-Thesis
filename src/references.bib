@article{BEYERSDORFF2013666,
	title = {A characterization of tree-like Resolution size},
	journal = {Information Processing Letters},
	volume = {113},
	number = {18},
	pages = {666-671},
	year = {2013},
	issn = {0020-0190},
	doi = {https://doi.org/10.1016/j.ipl.2013.06.002},
	url = {https://www.sciencedirect.com/science/article/pii/S0020019013001592},
	author = {Olaf Beyersdorff and Nicola Galesi and Massimo Lauria},
	keywords = {Computational complexity, Proof complexity, Prover-Delayer games, Resolution},
}

@inproceedings{sklearn_api,
  author    = {Lars Buitinck and Gilles Louppe and Mathieu Blondel and
               Fabian Pedregosa and Andreas Mueller and Olivier Grisel and
               Vlad Niculae and Peter Prettenhofer and Alexandre Gramfort
               and Jaques Grobler and Robert Layton and Jake VanderPlas and
               Arnaud Joly and Brian Holt and Ga{\"{e}}l Varoquaux},
  title     = {{API} design for machine learning software: experiences from the scikit-learn
               project},
  booktitle = {ECML PKDD Workshop: Languages for Data Mining and Machine Learning},
  year      = {2013},
  pages = {108--122},
}

@book{jana_kinect_2012,
	edition = {1},
	title = {Kinect for {Windows} {SDK} {Programming} {Guide}},
	isbn = {978-1-84969-238-0},
	url = {https://www.perlego.com/book/389793/kinect-for-windows-sdk-programming-guide-pdf},
	abstract = {In DetailKinect has been a game-changer in the world of motion games and applications since its first release. It has been touted as a controller for Microsoft Xbox but is much more than that. The developer version of Kinect, Kinect for Windows SDK, provides developers with the tools to develop applications that run on Windows. You can use this to develop applications that make interaction with your computer hands-free. 

  This book focuses on developing applications using the Kinect for Windows SDK. It is a complete end to end solution using different features of Kinect for Windows SDK with step by step guidance. The book will also help you develop motion sensitive and speech recognition enabled applications. You will also learn about building application using multiple Kinects.

  The book begins with explaining the different components of Kinect and then moves into to the setting up the device and getting thedevelopment environment ready. You will be surprised at how quickly the book takes you through the details of Kinect APIs. You will use NUI to use the Kinect for Natural Inputs like skeleton tracking, sensing, speech recognizing. 

  You will capture different types of stream, and images, handle stream event, and capture frame. Kinect device contains a motorized tilt to control sensor angles, you will learn how to adjust it automatically. The last part of the book teaches you how to build application using multiple Kinects and discuss how Kinect can be used to integrate with other devices such as Windows Phone and microcontroller.

  ApproachThis book is a practical tutorial that explains different features of Kinect for Windows SDK by creating sample applications throughout the book

  Who this book is forThe purpose of this book is to explain how to develop applications using the Kinect for Windows SDK. If you are a beginner and looking to start developing applications using the Kinect for Windows SDK, and if you want to build motion-sensing,speech-recognizing applications with Kinect, this book is for you.

  This book uses C\# and WPF (Windows Presentation Foundation) in the examples, so you need to know the basics of C\# and WPF. You should be familiar with the Visual Studio IDE as well. You don't have to know anything about the Kinect for Windows SDK.},
    language = {English},
    urldate = {2024-01-27},
    publisher = {Packt Publishing},
    author = {Jana, Abhijit},
    month = dec,
    year = {2012},
    keywords = {Computer Science, Digital Media},
}

@online{plotly, 
  author = {Plotly Technologies Inc.}, title = {Collaborative data science}, publisher = {Plotly Technologies Inc.}, address = {Montreal, QC}, year = {2015}, url = {https://plot.ly} 
}

@misc{GitHubKinectPyKinect2,
	author = {},
	title = {{G}it{H}ub - {K}inect/{P}y{K}inect2: {W}rapper to expose {K}inect for {W}indows v2 {A}{P}{I} in {P}ython --- github.com},
	howpublished = {\url{https://github.com/Kinect/PyKinect2}},
	year = {},
}

@incollection{xanthopoulos_linear_2013,
	address = {New York, NY},
	series = {{SpringerBriefs} in {Optimization}},
	title = {Linear {Discriminant} {Analysis}},
	isbn = {978-1-4419-9878-1},
	url = {https://doi.org/10.1007/978-1-4419-9878-1_4},
	abstract = {In this chapter we discuss another popular data mining algorithm that can be used for supervised or unsupervised learning. Linear Discriminant Analysis (LDA) was proposed by R. Fischer in 1936. It consists in finding the projection hyperplane that minimizes the interclass variance and maximizes the distance between the projected means of the classes. Similarly to PCA, these two objectives can be solved by solving an eigenvalue problem with the corresponding eigenvector defining the hyperplane of interest. This hyperplane can be used for classification, dimensionality reduction and for interpretation of the importance of the given features. In the first part of the chapter we discuss the generic formulation of LDA whereas in the second we present the robust counterpart scheme originally proposed by Kim and Boyd. We also discuss the non linear extension of LDA through the kernel transformation.},
	language = {en},
	urldate = {2024-01-16},
	booktitle = {Robust {Data} {Mining}},
	publisher = {Springer},
	author = {Xanthopoulos, Petros and Pardalos, Panos M. and Trafalis, Theodore B.},
	editor = {Xanthopoulos, Petros and Pardalos, Panos M. and Trafalis, Theodore B.},
	year = {2013},
	doi = {10.1007/978-1-4419-9878-1_4},
	keywords = {Data Mining Algorithm, Feature Space, Kernel Trick, Linear Discriminant Analysis, Robust Counterpart},
	pages = {27--33},
}
